class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int> next_smaller(n);
        vector<int> prev_smaller;
        stack<int> s;
        s.push(-1);
       for(int i=n-1;i>=0;i--){
                while(!s.empty() && s.top()!=-1 && heights[s.top()]>=heights[i]){
                    s.pop();
                }
                next_smaller[i]=s.top();
                s.push(i);
            
        }
        while (s.top()!=-1) { 
             s.pop(); 
        } 
        for(int i=0;i<n;i++){
            
                while(!s.empty() && s.top()!=-1 && heights[s.top()]>=heights[i]){
                    s.pop();
                }
                prev_smaller.push_back(s.top());
                s.push(i);
           
        }
        int max_area=0;
        for(int k=0;k<n;k++){
            if(next_smaller[k]==-1){
                next_smaller[k]=n-prev_smaller[i]-1;
            }
           int width=next_smaller[k]-prev_smaller[k]-1;
           max_area=max(max_area,width*heights[k]);
        }
        return max_area;
}    
};
