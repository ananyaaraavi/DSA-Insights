Letter Combinations of a Phone Number

#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Solution {
public:
    void solve(string digits, vector<string>& ans, string output, int index, string mapping[]) {
        // Base case
        if (index == digits.length()) {
            if (!output.empty()) {
                ans.push_back(output);
            }
            return;
        }
        
        // Get the current digit as an integer
        int number = digits[index] - '0'; 
        // Map the current digit to its corresponding string
        string str = mapping[number];

        // Recursively build the combinations
        for (int i = 0; i < str.length(); i++) {
            output.push_back(str[i]);
            solve(digits, ans, output, index + 1, mapping);
            output.pop_back();
        }
    }

    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if (digits.empty()) return ans; // Early return if digits are empty

        string mapping[10] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        string output = "";
        solve(digits, ans, output, 0, mapping);
        return ans;
    }
};
