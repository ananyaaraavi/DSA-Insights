#include <iostream>
using namespace std;
#include<vector>
int mod=1e4;
void solve(vector<vector<int>> &ans, vector<int> arr,int index,vector<int> output,int k){
    if (output.size() == k) {
        ans.push_back(output);
        return;
    }
    if (index == arr.size()) {
        return;
    }
    solve(ans,arr,index+1,output,k);
    output.push_back(arr[index]);
    solve(ans,arr,index+1,output,k);
}
void maxposs(int n,int k){
    int count=n;
    if(k==1){
        cout<<"the number of arrays are:"<<count<<endl;
        return;
    }
    vector<vector<int>> ans;
    vector<int> arr;
    vector<int> output;
    for(int i=0;i<n;i++){
        arr.push_back(i+1);
    }
    solve(ans,arr,0,output,k);
    for(int i=0;i<ans.size();i++){
        vector<int> temp=ans[i];
        int c=0;
        for(int j=0;j<k-1;j++){
            if(temp[j+1]%temp[j]==0){
                c++;
            }
        }
        if(c==k-1){
            count++;
            count%=mod;
        }
    }
    cout<<"the number of arrays are:"<<count<<endl;
}

int main() {
    int n;
    cin>>n;
    int k;
    cin>>k;
    maxposs(n,k);
    return 0;
}
